#-*- mode: org; mode:visual-line; mode:org-indent -*-
#+TITLE: Жит жаавар :)
#+AUTHOR: nagi
#+STARTUP: indent
#+STARTUP: hidestars

* Ерөнхий анх жит суулгасны дараах тохируулга.
#+begin_src
git config --global user.name "My NAME"
git config --global user.email my@email.address
#+end_src

* Шинээр проект үүсгээд түүнийг сервер лүү илгээх.

#+begin_src
mkidr test
cd test
git init
touch README
git add README
git commit -m "first commit"
git remote add origin git@github.com:natsag2000/testproject.git
git push origin master
#+end_src

* Хэрэв өөрийн гэсэн дотоод жит байгаа бол түүнийгээ сервер лүү нэмэх.
#+begin_src
cd existing_git_repo
git remote add origin git@github.com:natsag2000/testproject.git
git push origin master
#+end_src

* ssh тохируулга
  ~/.ssh/config файл дотор: (эхний болон гурав дахь хоёрыг шалгах хэрэгтэй, нэг нь байхад хангалттай байж магадгүй, corkscrew суусан байх ёстой байж ч магадгүй)
#+begin_src
  Host github.com
  User git
  HostName github.com
  Port 22
  TCPKeepAlive yes
  IdentityFile /home/path/to/.ssh/public_key(n_rsa)
#  IdentitiesOnly yes

Host git.savannah.gnu.org
  User nagi
  Hostname git.savannah.gnu.org
  port 22
  TCPKeepAlive yes
  IdentityFile /home/path/to/.ssh/public_key(n_rsa)
  IdentitiesOnly yes
#  PreferredAuthentications publickey

Host gitproxy
  User git
  HostName ssh.github.com
  Port 443
  ProxyCommand /usr/bin/corkscrew proxy.host proxy.port %h %p
#  PreferredAuthentications publickey
  IdentityFile /home/path/to/.ssh/public_key(n_rsa)
#+end_src

* Зарим мэдэхэд илүүдэхгүй зүйлс:
** проект файл татаж авахдаа
#+begin_src
git clone git://github.com/natsag2000/testproject.git
#+end_src

** хэрэв ssh түлхүүрээр холбогддог бол татаж авахадаа
#+begin_src
git clone ssh://github.com/natsag2000/testproject.git
#+end_src

* ssh түлхүүрээ зөв тохируулсан эсэхээ шалгахдаа
#+begin_src
ssh git@github.com
#+end_src

* ssh түлхүүр хэрэглэсэн бол тохиргооны файл бэлдэнэ.

.ssh/config
#+begin_src
Host github.com
	User git
	Hostname github.com
	PreferredAuthentications publickey
	IdentityFile /path/to/rsa-private/or/public
#+end_src
* Төслийн ямар хаягаас татаж авсны мэдэх
#+begin_src
  git remote -v
  git remote show origin
#+end_srcи
* Эх кодонд хамаарахгүй хэрэггүй файлуудыг устгах
  Устгахаасаа өмнөх зааж өгсөн санд байгаа нэмэлт үүссэн хэрэггүй файлуудыг жагсааж харуулах:
#+begin_src
  git clean -n -d <path>
#+end_src
  Устгах даа -f гэж хүчээр устгахыг зааж өгч бас болно
#+begin_src
  git clean -f -d <path>
#+end_src
  -x сонголтоор жит-ийн алгасах файлуудыг оруулан тооцож болно
#+begin_src
  git clean -x -f -d <path>
#+end_src
  -X сонголтоор зөвхөн алгасах файлуудын жагсаалтад байгаа файлуудыг  сонгож устгана
#+begin_src
  git clean -Х -f -d <path>
#+end_src
* Дотоод судал бүтээх
  mkdir example.git
  cd example.git
  git init --bare

  cd /tmp
  git clone path/to/example.git myexample
  cd myexample
  // create file
  git add .
  git commit -a -m "initial import"
  git push origin master

* Алгасах файлын жагсаалт үүсгэх
  git config --help ийг нэг уншихад гэмгүй
  Дараах тушаалаар ~/.gitignore файлд дотор оруулсан файлын нэрсүүдийг git автоматаар алгасах болно (эсвэл гараар ~/.gitconfig файлд нэмж болно):
  git config --global core.excludesfile ~/.gitignore



  жишээ нь дараах оруулгууд ~/.gitignore файлд байж болно:
  *.iws
  *.ipr
  .idea
  .gradle

* Судал үүсгэж сүүлд нь нийлүүлэх
  git checkout -b fix_that
  -- do some hack
  git commit -am "fixed that"
  git push ???

  git checkout master
  git rebase master fix_that

